snippet     UITableViewController
options     head
	class ${1:Hoge}ViewController : UITableViewController{
	    init() {
	        super.init(style: .plain) // .group
	    }

	    required init?(coder aDecoder: NSCoder) {
	        fatalError("init(coder:) has not been implemented")
	    }

	    override func numberOfSections(in tableView: UITableView) -> Int {
	        return 1
	    }
	
	    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
	        let count = 2
	        return count
	    }
	
	    override func tableView(_ tableView: UITableView, didDeselectRowAt indexPath: IndexPath) {
	        let cell = tableView.cellForRow(at: indexPath)
	        cell?.accessoryType = .none
	    }
	
	    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
	        //let section = indexPath.section
	        //let row = indexPath.row
	        //switch section{
	        //case 0:
	        //    for var i=0;i<4;i++ {
	        //        let path = NSIndexPath(forRow: i, inSection: 0)
	        //        let cell = tableView.cellForRowAtIndexPath(path)
	        //        cell?.accessoryType = .None
	        //    }
	        //case 1:
	        //    break
	        //default:
	        //    break
	        //}
	
	        //let cell = tableView.cellForRowAtIndexPath(indexPath)
	        //cell?.accessoryType = .Checkmark
	    }
	
	    override func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {
	        //if section == 0{
	        //    return "title1"
	        //}else if section == 1{
	        //    return "title2"
	        //}
	
	        return nil
	    }
	
	    override func tableView(_ ableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
	        var cell = tableView.dequeueReusableCell(withIdentifier: "$1Cell")

	        if cell == nil {
	            cell = UITableViewCell(style: .default, reuseIdentifier: "$1Cell")
	            cell!.selectionStyle = .none
	        }
	        let row = indexPath.row
	        cell!.textLabel?.text = "heogheo"
	
	        return cell!
	    }
	}
	
