環境構築メモ

#---------------------------------------
# Part 1
#---------------------------------------

# Setup list
zsh
tux
nvim
homebrew
tree
pet
git
reattach-to-user-namespace
gmv(coreutils) <- safe rm

0. Color settings
change color scheme to Solarized Dark on this url.
https://github.com/tomislav/osx-terminal.app-colors-solarized

1. Install git
on Terminal
$ git
xcode-select: note: no developer tools were found at '/Applications/Xcode.app', requesting install. Ch
~> auto installing git

2. Install Homebrew
follow the guide on the official site.

3. Clone dotfiles repository
https://github.com/sai708th/dotfiles
$ mkdir ~/Dev
$ cd ~/Dev
$ mkdir dotfiles
$ git clone https://github.com/sai708th/dotfiles dotfiles

4. Install items
$ brew install neovim
$ brew install tmux
$ brew install zsh
$ brew install reattach-to-user-namespace

5. Setup tmux, zsh
$ ln -s ~/Dev/dotfiles/_bash_profile .bash_profile
$ ln -s ~/Dev/dotfiles/_bashrc .bashrc
restart Terminal ~> check tmux launching
$ ln -s ~/Dev/dotfiles/_tmux.conf .tmux.conf
$ ln -s ~/Dev/dotfiles/_zshrc .zshrc
restart Terminal ~> check zsh launching on tmux.

6. Setup nvim
$ cd $XDG_HOME
$ mkdir cache
$ mkdir config
$ mkdir runtime
$ cd config
$ mkdir nvim
$ cd nvim
$ ln -s ~/Dev/dotfiles/init.vim
$ ln -s ~/Dev/dotfiles/dein.toml
$ ln -s ~/Dev/dotfiles/dein_lazy.toml
$ nvim
~> timeout: Error installing plugins: swift (apple. about 18 minute)
~> timeout: Error installing plugins: swift 
~> completed. (3rd try.)

7. Setup denite (need python3)
$ brew install python3
$ pip3 install neovim
rem. this is NOT neovim, but support soft.
write below code at init.vim, restart nvim.
let g:python3_host_prog = '/path/to/python3'

100. Install other tools
$ brew install tree
$ brew install knqyf263/pet/pet
$ brew install coreutils 


#---------------------------------------
# Part 2 gitbook
#---------------------------------------

1. Install nodebrew
$ brew install nodebrew
$ nodebrew -v

2. Install nodejs
$ mkdir ~/.nodebrew
$ mkdir ~/.nodebrew/src
$ nodebrew install-binary latest
$ nodebrew use stable

3. Setting PATH
bashrc, zshrc wo kakunin.
check below commands to be successed
$ node -v
$ npm -v

4. Install gitbook
$ npm install gitbook-cli -g

$ mkdir test
$ cd test
$ gitbook init

5. Install mermaid for gitbook
$ npm install gitbook-plugin-mermaid -g

#--------------------------------------------
# Haskell
#--------------------------------------------

1. Install
$ brew install ghc
$ brew install haskell-stack 
haskell-stack ha ghci + xcode tekinayatsu

$ stack new PFAD
$ cd PFAD
$ stack build

$ brew install cabal-install
$ cabal update
$ cabal install parsec

